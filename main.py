import json
import random
import discord
import os
from discord.ext import commands
from dotenv import load_dotenv
from dateutil import tz

load_dotenv()
TOKEN = os.getenv("TOKEN")
MESSAGE_ID = os.getenv("MESSAGE_ID")

intents = discord.Intents.default()
intents.message_content = True
intents.members = True
intents.reactions = True
bot = commands.Bot(command_prefix='>', intents=intents)

hello_words = ["hello", "hi", "–ø—Ä–∏–≤–µ—Ç", "–∫–∞–∫ –¥–µ–ª–∞"]
info_words = ["–∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å", "–∫—É–¥–∞ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è", "–ø–æ–º–æ—â—å", "–ø–æ–º–æ–≥–∏—Ç–µ", "–ø–æ–∑–≤–æ–Ω–∏—Ç—å", "–Ω–∞–ø–∏—Å–∞—Ç—å ", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "support"]
bye_words = ["–ø–æ–∫–∞", "–¥–æ—Å–≤–∏–¥–∞–Ω–∏—è", "bye"]

REACTION_ROLE_MAP = {
    'üëé': '–†–æ–ª—å 1',  # –ó–∞–º–µ–Ω–∏—Ç–µ 'üëé' –Ω–∞ –Ω—É–∂–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é –∏ '–†–æ–ª—å1' –Ω–∞ –Ω—É–∂–Ω–æ–µ –∏–º—è —Ä–æ–ª–∏
    'üëç': '–†–æ–ª—å 2',  # –ó–∞–º–µ–Ω–∏—Ç–µ 'üëç' –Ω–∞ –Ω—É–∂–Ω—É—é —Ä–µ–∞–∫—Ü–∏—é –∏ '–†–æ–ª—å2' –Ω–∞ –Ω—É–∂–Ω–æ–µ –∏–º—è —Ä–æ–ª–∏
}

user_timezone = tz.tzlocal()


@bot.event
async def on_ready():
    print('I am Ready!')


@bot.event
async def on_member_join(member):
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = {
        'username': member.name,
        'display_name': member.display_name,
        'id': member.id,
        'joined_at': member.joined_at.astimezone(user_timezone).strftime("%d-%m-%Y %H:%M:%S"),
        'created_at': member.created_at.astimezone(user_timezone).strftime("%d-%m-%Y %H:%M:%S")
    }

    if not os.path.isfile('user_info.json'):
        with open('user_info.json', 'w') as file:
            json.dump({}, file)

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º JSON —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    with open('user_info.json', 'r') as file:
        try:
            data = json.load(file)
        except json.JSONDecodeError:
            data = {}

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä—å
    data[str(member.name)] = user_info

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
    with open('user_info.json', 'w') as file:
        json.dump(data, file, indent=4)

    @bot.event
    async def on_member_update(before, after):
        if not os.path.isfile('user_info.json'):
            return

        with open('user_info.json', 'r') as file:
            data = json.load(file)

        if str(after.id) in data:
            data[str(after.id)]['display_name'] = after.display_name

            with open('user_info.json', 'w') as file:
                json.dump(data, file, indent=4)


@bot.event
async def on_member_remove(member):
    if not os.path.isfile('user_info.json'):
        return

    with open('user_info.json', 'r') as file:
        data = json.load(file)

    # –£–¥–∞–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã—à–µ–¥—à–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
    if str(member.id) in data:
        del data[str(member.id)]

    if str(member.name) in data:
        del data[str(member.name)]

    with open('user_info.json', 'w') as file:
        json.dump(data, file, indent=4)


@bot.event
async def on_raw_reaction_add(payload):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ä–µ–∞–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∞ –Ω–∞ –Ω—É–∂–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if payload.message_id == int(MESSAGE_ID):
        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç —Å–µ—Ä–≤–µ—Ä–∞
        guild = bot.get_guild(payload.guild_id)

        # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user = guild.get_member(payload.user_id)

        # –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ä–µ–∞–∫—Ü–∏–∏
        role_name = REACTION_ROLE_MAP.get(payload.emoji.name)

        # –í—ã–¥–∞—á–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if role_name and user:
            role = discord.utils.get(guild.roles, name=role_name)
            if role:
                await user.add_roles(role)


@bot.event
async def on_message(message):
    await bot.process_commands(message)
    if message.author == bot.user:
        return

    msg = message.content.lower()
    msg_list = msg.split()

    # if (msg in hello_words) or len(list(set(msg_list + hello_words)))<len(msg_list) + len(hello_words):
    find_hello_words = False
    for item in hello_words:
        if msg.find(item) >= 0:
            find_hello_words = True
    if (find_hello_words):
        await message.channel.send('–ü—Ä–∏–≤–µ—Ç, —á–µ–≥–æ –∏–∑–≤–æ–ª–∏—Ç–µ?')

    find_words = False
    for item in bye_words:
        if msg.find(item) >= 0:
            find_words = True
    if (find_words):
        await message.channel.send('–ü–æ–∫–∞!')

    # if (msg in info_words) or len(list(set(msg_list + info_words)))<len(msg_list) + len(info_words):
    find_info_words = False
    for item in info_words:
        if msg.find(item) >= 0:
            find_info_words = True
    if (find_info_words):
        await message.channel.send('–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ, –≤–∞—à –≤–æ–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É! –û–∂–∏–¥–∞–π—Ç–µ!')


@bot.command()
async def meme(ctx):
    joke = [
        "https://imgur.com/t/pepe/qjxtX9W",
        "https://imgur.com/t/pepe/Wkrvc7Z",
        "https://imgur.com/gallery/4GUOjyS",
        "https://imgur.com/gallery/nkQ9Etq"
    ]
    r_joke = random.choice(joke)
    await ctx.send(r_joke)


@bot.command()
async def pepe(ctx):
    await ctx.send(" https://i.imgur.com/Hab3RJO.jpg ")


@bot.command()
async def add_user(ctx, nickname: str):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –Ω–∏–∫–Ω–µ–π–º–æ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    member = discord.utils.find(lambda m: m.name == nickname or m.display_name == nickname, ctx.guild.members)
    if not member:
        await ctx.send(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–∏–∫–Ω–µ–π–º–æ–º {nickname} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.')
        return
    # –°–æ–∑–¥–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    user_info = {
        'username': member.name,
        'display_name': member.display_name,
        'id': member.id,
        'joined_at': member.joined_at.astimezone(user_timezone).strftime("%d-%m-%Y %H:%M:%S"),
        'created_at': member.created_at.astimezone(user_timezone).strftime("%d-%m-%Y %H:%M:%S")
    }

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º JSON —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    with open('user_info.json', 'r', encoding='utf-8') as file:
        data = json.load(file)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ—Ç –ª–∏ —É–∂–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
    if nickname in data:
        await ctx.send(f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {nickname} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
        return
    # if member.display_name in user_info['display_name']:
    #     await ctx.send(f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {nickname} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.')
    #     return

    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ —Å–ª–æ–≤–∞—Ä—å
    data[nickname] = user_info

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ JSON —Ñ–∞–π–ª
    with open('user_info.json', 'w', encoding='utf-8') as file:
        json.dump(data, file, indent=4, ensure_ascii=False)

    await ctx.send(f'–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {nickname} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ JSON —Ñ–∞–π–ª.')

bot.run(TOKEN)
